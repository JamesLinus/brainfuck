#!/usr/bin/env python
from optparse import OptionParser
import sys
import os


bfc=os.path.abspath(sys.argv[0])
bfc1=os.path.join(os.path.dirname(bfc), "bfc1")
llvm_bin_dir=os.popen("llvm-config --bindir").read().strip()
if len(llvm_bin_dir)<=0:
	print >> sys.stderr, "LLVM not found"
	sys.exit(1)
llc=os.path.join(llvm_bin_dir, "llc")
linker=os.popen("which clang").read().strip()
if len(linker)<=0:
	linker=os.popen("which gcc").read().strip()
if len(linker)<=0:
	linker=os.popen("which cc").read().strip()
if len(linker)<=0:
	print >> sys.stderr, "Clang or GCC not found"
	sys.exit(1)

cmd_tmpl=""" "%s" "%s" | "%s" -O3 | "%s" -pipe -o "%s" -x assembler -"""

parser=OptionParser()
parser.add_option("-o", "--output", dest="executable", help="write executable to FILE", metavar="FILE", default="./a.out")
(options, args)=parser.parse_args()
if len(args)<=0 :
	print >> sys.stderr, os.path.basename(bfc)+": error: no input files"
	sys.exit(1)
cmd=cmd_tmpl % (bfc1, args[0], llc, linker, options.executable)
os.system(cmd)
